=begin
#Assembly API

#Assembly (formely PromisePay) is a powerful payments engine custom-built for platforms and marketplaces.

The version of the OpenAPI document: 2.0
Contact: support@assemblypayments.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.2.0

=end

# Common files
require 'assembly_ruby/api_client'
require 'assembly_ruby/api_error'
require 'assembly_ruby/version'
require 'assembly_ruby/configuration'

# Models
require 'assembly_ruby/models/account'
require 'assembly_ruby/models/account_id_request_body'
require 'assembly_ruby/models/address'
require 'assembly_ruby/models/address_addresses'
require 'assembly_ruby/models/address_addresses_links'
require 'assembly_ruby/models/bank_account'
require 'assembly_ruby/models/bank_account_bank_accounts'
require 'assembly_ruby/models/bank_account_bank_accounts_bank'
require 'assembly_ruby/models/bank_account_bank_accounts_links'
require 'assembly_ruby/models/bank_account_deletion'
require 'assembly_ruby/models/bank_account_id_request_body'
require 'assembly_ruby/models/bank_account_request_body'
require 'assembly_ruby/models/batch_transaction'
require 'assembly_ruby/models/batch_transaction_account_external'
require 'assembly_ruby/models/batch_transaction_account_external_currency'
require 'assembly_ruby/models/batch_transaction_address_country'
require 'assembly_ruby/models/batch_transaction_item'
require 'assembly_ruby/models/batch_transaction_links'
require 'assembly_ruby/models/batch_transaction_marketplace'
require 'assembly_ruby/models/batch_transaction_related'
require 'assembly_ruby/models/batch_transaction_related_account_to'
require 'assembly_ruby/models/bill_payment_request_body'
require 'assembly_ruby/models/bpay_account'
require 'assembly_ruby/models/bpay_account_deletion'
require 'assembly_ruby/models/bpay_account_request_body'
require 'assembly_ruby/models/bpay_details'
require 'assembly_ruby/models/bpay_details_with_id'
require 'assembly_ruby/models/callback'
require 'assembly_ruby/models/callback_deletion'
require 'assembly_ruby/models/callback_links'
require 'assembly_ruby/models/callback_request_body'
require 'assembly_ruby/models/callback_response'
require 'assembly_ruby/models/callback_response_payload'
require 'assembly_ruby/models/callback_response_response'
require 'assembly_ruby/models/callbacks'
require 'assembly_ruby/models/card_account'
require 'assembly_ruby/models/card_account_card_accounts'
require 'assembly_ruby/models/card_account_card_accounts_card'
require 'assembly_ruby/models/card_account_card_accounts_links'
require 'assembly_ruby/models/card_account_deletion'
require 'assembly_ruby/models/card_account_id_request_body'
require 'assembly_ruby/models/card_account_request_body'
require 'assembly_ruby/models/card_account_verify_request_body'
require 'assembly_ruby/models/charge'
require 'assembly_ruby/models/charge_links'
require 'assembly_ruby/models/charge_request_body'
require 'assembly_ruby/models/charge_status'
require 'assembly_ruby/models/charges'
require 'assembly_ruby/models/company'
require 'assembly_ruby/models/company_related'
require 'assembly_ruby/models/company_request_body'
require 'assembly_ruby/models/company_self'
require 'assembly_ruby/models/deposit_request_body'
require 'assembly_ruby/models/direct_debit_authority'
require 'assembly_ruby/models/direct_debit_authority_links'
require 'assembly_ruby/models/direct_debit_authority_related'
require 'assembly_ruby/models/direct_debit_authority_request_body'
require 'assembly_ruby/models/disbursement'
require 'assembly_ruby/models/disbursement_links'
require 'assembly_ruby/models/disbursements'
require 'assembly_ruby/models/error'
require 'assembly_ruby/models/fee'
require 'assembly_ruby/models/fee_request_body'
require 'assembly_ruby/models/fees'
require 'assembly_ruby/models/item'
require 'assembly_ruby/models/item_links'
require 'assembly_ruby/models/item_related'
require 'assembly_ruby/models/item_request_body'
require 'assembly_ruby/models/items'
require 'assembly_ruby/models/list_batch_transactions'
require 'assembly_ruby/models/list_bpay_accounts'
require 'assembly_ruby/models/list_bpay_accounts_bpay_accounts'
require 'assembly_ruby/models/list_bpay_accounts_bpay_details'
require 'assembly_ruby/models/list_bpay_accounts_links'
require 'assembly_ruby/models/list_bpay_accounts_meta'
require 'assembly_ruby/models/list_callback_responses'
require 'assembly_ruby/models/list_callback_responses_links'
require 'assembly_ruby/models/list_direct_debit_authorities'
require 'assembly_ruby/models/marketplace'
require 'assembly_ruby/models/marketplace_marketplaces'
require 'assembly_ruby/models/marketplace_marketplaces_business_information'
require 'assembly_ruby/models/marketplace_marketplaces_links'
require 'assembly_ruby/models/marketplace_marketplaces_related'
require 'assembly_ruby/models/penny_verify_request_body'
require 'assembly_ruby/models/refund_request_body'
require 'assembly_ruby/models/release_payment_request_body'
require 'assembly_ruby/models/simple_companies'
require 'assembly_ruby/models/simple_company'
require 'assembly_ruby/models/single_batch_transaction'
require 'assembly_ruby/models/single_bpay_details_with_id'
require 'assembly_ruby/models/single_callback'
require 'assembly_ruby/models/single_callback_response'
require 'assembly_ruby/models/single_charge'
require 'assembly_ruby/models/single_charge_status'
require 'assembly_ruby/models/single_company'
require 'assembly_ruby/models/single_direct_debit_authority'
require 'assembly_ruby/models/single_disbursement'
require 'assembly_ruby/models/single_fee'
require 'assembly_ruby/models/single_item'
require 'assembly_ruby/models/single_routing_number'
require 'assembly_ruby/models/single_routing_number_routing_number'
require 'assembly_ruby/models/single_status'
require 'assembly_ruby/models/single_transaction'
require 'assembly_ruby/models/single_user'
require 'assembly_ruby/models/single_wire_details_with_id'
require 'assembly_ruby/models/status'
require 'assembly_ruby/models/token_auth_request_body'
require 'assembly_ruby/models/tokens_request_body'
require 'assembly_ruby/models/tokens_response'
require 'assembly_ruby/models/tools_status'
require 'assembly_ruby/models/transaction'
require 'assembly_ruby/models/transaction_links'
require 'assembly_ruby/models/transaction_marketplace'
require 'assembly_ruby/models/transaction_payee_details'
require 'assembly_ruby/models/transaction_related'
require 'assembly_ruby/models/transaction_related_transactions'
require 'assembly_ruby/models/transactions'
require 'assembly_ruby/models/update_item_request_body'
require 'assembly_ruby/models/update_user_request_body'
require 'assembly_ruby/models/user'
require 'assembly_ruby/models/user_links'
require 'assembly_ruby/models/user_related'
require 'assembly_ruby/models/user_request_body'
require 'assembly_ruby/models/users'
require 'assembly_ruby/models/wallet_account'
require 'assembly_ruby/models/wallet_account_bpay_details'
require 'assembly_ruby/models/wallet_account_bpay_details_bpay_details'
require 'assembly_ruby/models/wallet_account_npp_details'
require 'assembly_ruby/models/wallet_account_npp_details_npp_details'
require 'assembly_ruby/models/wallet_account_npp_details_npp_details_marketplace_pay_ids'
require 'assembly_ruby/models/wallet_account_wallet_accounts'
require 'assembly_ruby/models/wallet_account_wallet_accounts_links'
require 'assembly_ruby/models/wire_details'
require 'assembly_ruby/models/wire_details_with_id'
require 'assembly_ruby/models/withdraw_request_body'

# APIs
require 'assembly_ruby/api/addresses_api'
require 'assembly_ruby/api/authentication_api'
require 'assembly_ruby/api/b_pay_accounts_api'
require 'assembly_ruby/api/bank_accounts_api'
require 'assembly_ruby/api/batch_transactions_api'
require 'assembly_ruby/api/callbacks_api'
require 'assembly_ruby/api/card_accounts_api'
require 'assembly_ruby/api/charges_api'
require 'assembly_ruby/api/companies_api'
require 'assembly_ruby/api/direct_debit_authorities_api'
require 'assembly_ruby/api/disbursements_api'
require 'assembly_ruby/api/fees_api'
require 'assembly_ruby/api/item_actions_api'
require 'assembly_ruby/api/items_api'
require 'assembly_ruby/api/marketplaces_api'
require 'assembly_ruby/api/token_auth_api'
require 'assembly_ruby/api/tools_api'
require 'assembly_ruby/api/transactions_api'
require 'assembly_ruby/api/users_api'
require 'assembly_ruby/api/wallet_accounts_api'

module AssemblyRuby
  class << self
    # Customize default settings for the SDK using block.
    #   AssemblyRuby.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
