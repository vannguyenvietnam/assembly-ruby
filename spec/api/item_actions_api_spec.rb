=begin
#Assembly API

#Assembly (formely PromisePay) is a powerful payments engine custom-built for platforms and marketplaces.

The version of the OpenAPI document: 2.0
Contact: support@assemblypayments.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.2.0

=end

require 'spec_helper'
require 'json'

# Unit tests for AssemblyRuby::ItemActionsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ItemActionsApi' do
  before do
    # run before each test
    @api_instance = AssemblyRuby::ItemActionsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ItemActionsApi' do
    it 'should create an instance of ItemActionsApi' do
      expect(@api_instance).to be_instance_of(AssemblyRuby::ItemActionsApi)
    end
  end

  # unit tests for authorize_payment
  # Authorize Payment
  # Where pre-authentication is enabled on a platform, initiates a credit card payment authorization for an item. When an authorization is successful, your platform holds the item amount for capture, but there is no transfer of funds happening. This call is used with the Capture Payment or Void Payment calls. 
  # @param id Marketplace / Platform item ID
  # @param card_account_id_request_body 
  # @param [Hash] opts the optional parameters
  # @return [SingleItem]
  describe 'authorize_payment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cancel_item
  # Cancel
  # Cancel an **Item**. This will transition the **Item** state to &#x60;cancelled&#x60;. **Items** can only be cancelled if they haven’t been actioned in any other way.
  # @param id Marketplace / Platform item ID
  # @param [Hash] opts the optional parameters
  # @return [SingleItem]
  describe 'cancel_item test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for capture_payment
  # Capture Payment
  # Where pre-authentication is enabled on a platform, completes a credit card payment for an item whose payment is authorized. This call is used with the Authorize Payment call. 
  # @param id Marketplace / Platform item ID
  # @param [Hash] opts the optional parameters
  # @return [SingleItem]
  describe 'capture_payment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for make_payment
  # Make Payment
  # Make a payment for an **Item**. Pass the &#x60;:account_id&#x60; of a **Bank Account** or a **Card Account** associated with the **Item’s** buyer. The **Item** state will transition to one of &#x60;payment_held&#x60;, &#x60;payment_pending&#x60; or &#x60;completed&#x60; for an **Express** or **Approve** payment type. 
  # @param id Marketplace / Platform item ID
  # @param account_id_request_body 
  # @param [Hash] opts the optional parameters
  # @return [SingleItem]
  describe 'make_payment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for refund
  # Refund
  # Refund an **Item**’s funds. A partial &#x60;amount&#x60; can be specified otherwise the full amount will be refunded. This will transition the **Item** state to ‘refunded’ if the full amount is refunded, or to the previously held state if a partial &#x60;amount&#x60; is specified.
  # @param id Marketplace / Platform item ID to be refunded
  # @param refund_request_body 
  # @param [Hash] opts the optional parameters
  # @return [SingleItem]
  describe 'refund test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for release_payment
  # Release Payment (Deprecated - Do Not Use)
  # Included for legacy purposes for existing customers that use Escrow payments which are no longer supported for new flows/customers. Release funds held in escrow from an **Item** with an **Escrow** or **Escrow Partial Release** payment type.  This will transition the **Item** state to &#x60;completed&#x60;.
  # @param id Marketplace / Platform item ID
  # @param release_payment_request_body 
  # @param [Hash] opts the optional parameters
  # @return [SingleItem]
  describe 'release_payment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for void_payment
  # Void Payment
  # Where pre-authentication is enabled on a platform, voids the &#x60;payment_authorized&#x60; status for an item. This call is used with the Authorize Payment call. **Note**: Not all payment gateways support the Void Payment API call. In this case, you can wait until a payment authorization expires. A payment authorisation expires after 3 to 6 days if not captured. 
  # @param id Marketplace / Platform item ID
  # @param [Hash] opts the optional parameters
  # @return [SingleItem]
  describe 'void_payment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
